<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Rotoplas Uploader</title>
  </head>
  <body>
    <div class="container">
      <img src="/favicon.ico" class="icon" />
      <h1>Rotoplas Uploader</h1>
      <form
        id="uploadForm"
        action="/upload"
        method="post"
        enctype="multipart/form-data"
      >
        <label for="file">Select a file to upload:</label>
        <input type="file" id="file" name="file" required />
        <br /><br />
        <button type="submit">Upload</button>
      </form>
      <p id="urls"></p>

      <div class="urls">
        {{ range.files }}

        <div>
          {{ if .IsImg }}
          <img
            src="/thumbs/{{.Name}}"
            alt="{{.Name}}"
            style="max-width: 200px; max-height: 200px; margin: 10px"
          />
          {{ end }}

          {{ if .IsVid }}
          <video
            src="/files/{{.Name}}"
            controls
            style="max-width: 300px; max-height: 200px; margin: 10px"
          ></video>
          {{ end }}
          <a href="/files/{{.Name}}">
            {{.Name}}
          </a>
          <p class="size">Size: {{.Size}} MB</p>
        </div>

        {{ end }}
      </div>
    </div>
  </body>
  <script>
    document.querySelector("#uploadForm").addEventListener("submit", (e) => {
      e.preventDefault();

      const formData = new FormData();
      formData.append("file", document.querySelector("#file").files[0]);

      fetch("/upload", {
        method: "POST",
        body: formData,
      })
        .then((data) => data.json())
        .then((data) => {
          document.querySelector(
            "#urls"
          ).innerHTML += `<ul><a href="/files/${data.filename}">${data.filename}</a></ul>`;
        });
    });
  </script>
</html>

<style>
  img,
  video,
  a {
    margin: none;
  }

  .icon {
    image-rendering: pixelated;
  }

  form {
    border: 2px solid #c7d47d;
    border-radius: 20px;
    padding: 20px;
  }

  .size {
    font-size: 12px;
  }

  .container {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding-top: 50px;
  }

  .urls {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    width: 800px;
    justify-items: center;
    align-items: center;
    /* gap: 12px; */
  }

  .urls > div {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 10px;
    padding: 10px;
  }

  a {
    display: flex;
    flex-direction: column;
    color: black;
    text-decoration: none;
    text-align: center;
  }

  a:hover {
    color: #007bff;
    text-decoration: underline;
  }

  img,
  video {
    /* border-radius: 10px; */
    width: 120px;
    max-height: 120px;
    object-fit: cover;
    transition: 0.3s;
  }

  @media only screen and (max-width: 800px) {
    .urls {
        grid-template-columns: repeat(3, 1fr);
        width: 100%;
    }
  }

  @media only screen and (max-width: 600px) {
    .urls {
        grid-template-columns: repeat(2, 1fr);
    }
  }
</style>
